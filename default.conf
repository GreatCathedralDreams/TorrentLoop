server {
    server_name  localhost media.navratangupta.in;

###PROXY-START###

###REDIRECT###
location = / {
return 302 $scheme://$host/jellyfin/;
}

###SYSTEMSTAT-PROXY###
location /sysinfo {
proxy_set_header Host $host;                                         
proxy_set_header X-Forwarded-Scheme $scheme;                         
proxy_set_header X-Forwarded-Proto $scheme;                          
proxy_set_header X-Forwarded-For $remote_addr;     
proxy_set_header X-Real-IP $remote_addr;                             
proxy_pass http://systemstat:30000;
auth_basic           "Administratorâ€™s Area";
    auth_basic_user_file /etc/nginx/.htpasswd; 
}


###RADARR-PROXY###
location /radarr {
    proxy_pass http://radarr:7878;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }

###PROWLARR-PROXY###                                                   
location /prowlarr {                                                   
    proxy_pass http://prowlarr:9696;
    proxy_set_header Host $host;                                     
    proxy_set_header X-Real-IP $remote_addr;                         
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;     
    proxy_http_version 1.1;                                          
    proxy_set_header Upgrade $http_upgrade;                          
    proxy_set_header Connection $http_connection;                    
  } 
###QBITTORRENT-PROXY###
location /qbt/ {
    proxy_pass         http://vpn:5080/;
    proxy_http_version 1.1;

    proxy_set_header   Host               $host;
    proxy_set_header   X-Forwarded-Host   $http_host;
    proxy_set_header   X-Forwarded-For    $remote_addr;
    proxy_cookie_path  /                  "/; Secure";
}

###JELLYFIN-PROXY###
location /jellyfin {
        return 302 $scheme://$host/jellyfin/;
    }

    location /jellyfin/ {

        proxy_pass http://jellyfin:8096/jellyfin/;

        proxy_pass_request_headers on;

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering on;
    }

###SONAR_PROXY###
location /sonarr {
    proxy_pass http://sonarr:8989;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
  }


###PROXY-END###

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}






    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/media.navratangupta.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/media.navratangupta.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = media.navratangupta.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name  localhost media.navratangupta.in;
    listen 80;
    return 404; # managed by Certbot


}